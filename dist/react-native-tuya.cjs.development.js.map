{"version":3,"file":"react-native-tuya.cjs.development.js","sources":["../src/activator.ts","../src/bridgeUtils.ts","../src/device.ts","../src/home.ts","../src/homeDataManager.ts","../src/homeManager.ts","../src/homeMember.ts","../src/ota.ts","../src/timer.ts","../src/user.ts"],"sourcesContent":["import { DeviceBean } from './device';\r\nimport { NativeModules, Platform } from 'react-native';\r\nimport { DeviceDetailResponse } from './home';\r\nimport { TuyaError } from './generic';\r\n\r\nconst tuya = NativeModules.TuyaActivatorModule;\r\nconst tuyaBLEActivator = NativeModules.TuyaBLEActivatorModule;\r\nconst tuyaBLEScanner = NativeModules.TuyaBLEScannerModule;\r\n\r\nexport function openNetworkSettings() {\r\n  return tuya.openNetworkSettings({});\r\n}\r\n\r\nexport enum ActivatorType {\r\n  AP = 'THING_AP',\r\n  EZ = 'THING_EZ',\r\n  AP_4G_GATEWAY = 'THING_4G_GATEWAY',\r\n  QR = 'THING_QR',\r\n}\r\n\r\nexport type InitActivatorParams = {\r\n  homeId: number;\r\n  ssid: string;\r\n  password: string;\r\n  time: number;\r\n  type: ActivatorType;\r\n};\r\n\r\nexport function initActivator(\r\n  params: InitActivatorParams\r\n): Promise<DeviceDetailResponse | TuyaError> {\r\n  return tuya.initActivator(params);\r\n}\r\n\r\nexport function stopConfig() {\r\n  return tuya.stopConfig();\r\n}\r\n\r\nexport function startBluetoothScan() {\r\n  if (Platform.OS === 'ios') {\r\n    return tuyaBLEScanner.startBluetoothScan();\r\n  }\r\n  return tuya.startBluetoothScan();\r\n}\r\n\r\nexport function stopLePairing() {\r\n  if (Platform.OS === 'ios') {\r\n    return tuyaBLEActivator.stopLePairing();\r\n  } else {\r\n    console.error('[tuya] stopLePairing is not supported on Android as it is not needed.');\r\n  }\r\n}\r\n\r\nexport interface InitBluetoothActivatorParams {\r\n  deviceId?: string;\r\n  productId?: string;\r\n  homeId: number;\r\n  ssid: string;\r\n  password: string;\r\n}\r\n\r\nexport function initBluetoothDualModeActivator(\r\n  params: InitBluetoothActivatorParams\r\n): Promise<DeviceBean | TuyaError> {\r\n  if (Platform.OS === 'ios') {\r\n    return tuyaBLEActivator.initActivator(params);\r\n  }\r\n  return tuya.initBluetoothDualModeActivator(params);\r\n}\r\n\r\nexport function getCurrentWifi(\r\n  success: (ssid: string) => void,\r\n  error: () => void\r\n) {\r\n  // We need the Allow While Using App location permission to use this.\r\n  return tuya.getCurrentWifi({}, success, error);\r\n}\r\n","import { NativeEventEmitter, NativeModules } from 'react-native';\r\n\r\nexport const GROUPLISTENER = 'groupListener';\r\nexport const HARDWAREUPGRADELISTENER = 'hardwareUpgradeListener';\r\nexport const DEVLISTENER = 'devListener';\r\nexport const SUBDEVLISTENER = 'subDevListener';\r\nexport const HOMESTATUS = 'homeStatus';\r\nexport const HOMECHANGE = 'homeChange';\r\nexport const SINGLETRANSFER = 'SingleTransfer';\r\n\r\nlet eventEmitter = new NativeEventEmitter(NativeModules.TuyaRNEventEmitter);\r\n\r\nexport function addEvent(eventName: string, callback: (data: any) => any) {\r\n  return eventEmitter.addListener(eventName, callback);\r\n}\r\nexport const bridge = (key: string, id: string | number) => `${key}//${id}`;\r\n","import { NativeModules, EmitterSubscription, Platform } from 'react-native';\r\nimport { addEvent, bridge, DEVLISTENER } from './bridgeUtils';\r\nimport { TuyaError } from './generic';\r\n\r\nconst tuya = NativeModules.TuyaDeviceModule;\r\n\r\nexport type DeviceBean = {\r\n  productId: string;\r\n  devId: string;\r\n  verSw: string;\r\n  name: string;\r\n  dps: DeviceDps;\r\n  uuid: string;\r\n  communicationId: string;\r\n  connectionStatus: string;\r\n  bluetooth: boolean;\r\n  cloudOnline: boolean;\r\n  isOnline: boolean;\r\n};\r\n\r\nexport type DevListenerParams = {\r\n  devId: string;\r\n};\r\n\r\nexport type DevListenerType =\r\n  | 'onDpUpdate'\r\n  | 'onRemoved'\r\n  | 'onStatusChanged'\r\n  | 'onNetworkStatusChanged'\r\n  | 'onDevInfoUpdate'\r\n  | 'onFirmwareUpgradeSuccess'\r\n  | 'onFirmwareUpgradeFailure'\r\n  | 'onFirmwareUpgradeProgress';\r\n\r\nlet devListenerSubs: { [devId: string]: EmitterSubscription } = {};\r\n\r\nexport function registerDevListener(\r\n  params: DevListenerParams,\r\n  type: DevListenerType,\r\n  callback: (data: any) => void\r\n) {\r\n  tuya.registerDevListener(params);\r\n  const sub = addEvent(bridge(DEVLISTENER, params.devId), data => {\r\n    if (data.type === type) {\r\n      callback(data);\r\n    }\r\n  });\r\n  devListenerSubs[params.devId] = sub;\r\n}\r\n\r\nexport function unRegisterAllDevListeners() {\r\n  for (const devId in devListenerSubs) {\r\n    const sub = devListenerSubs[devId];\r\n    sub.remove();\r\n    tuya.unRegisterDevListener({ devId });\r\n  }\r\n  devListenerSubs = {};\r\n}\r\n\r\nexport type GetDeviceParams = {\r\n  devId: string;\r\n};\r\n\r\nexport function getDevice(params: GetDeviceParams): Promise<any> {\r\n  if (Platform.OS === 'ios') {\r\n    console.error('[tuya] getDevice is not supported on iOS');\r\n    return Promise.resolve(null);\r\n  }\r\n  return tuya.getDevice(params);\r\n}\r\n\r\nexport function getDeviceData(params: GetDeviceParams): Promise<any> {\r\n  if (Platform.OS === 'ios') {\r\n    console.error('[tuya] getDevice is not supported on iOS');\r\n    return Promise.resolve(null);\r\n  }\r\n  return tuya.getDeviceData(params);\r\n}\r\n\r\nexport type DeviceDpValue = boolean | number | string;\r\nexport type DeviceDps = {\r\n  [dpId: string]: DeviceDpValue;\r\n};\r\nexport type SendParams = {\r\n  devId: string;\r\n} & DeviceDps;\r\n\r\nexport function send(params: object) {\r\n  return tuya.send(params);\r\n}\r\n\r\nexport type RemoveDeviceParams = { devId: string };\r\n\r\nexport function removeDevice(params: RemoveDeviceParams): Promise<string | TuyaError> {\r\n  return tuya.removeDevice(params);\r\n}\r\n\r\nexport type RenameDeviceParams = { devId: string; name: string };\r\n\r\nexport function renameDevice(params: RenameDeviceParams): Promise<string | TuyaError> {\r\n  return tuya.renameDevice(params);\r\n}\r\n\r\nexport type GetDataPointStatsParams = {\r\n  devId: string;\r\n  DataPointTypeEnum: 'DAY' | 'WEEK' | 'MONTH';\r\n  number: number; // number of historical data result values, up to 50\r\n  dpId: string;\r\n  startTime: number; // in ms\r\n};\r\n\r\nexport function getDataPointStat(\r\n  params: GetDataPointStatsParams\r\n): Promise<any> {\r\n  return tuya.getDataPointStat(params);\r\n}\r\n","import { NativeModules } from 'react-native';\r\nimport { DeviceDps } from './device';\r\nimport { TuyaError } from './generic';\r\n\r\nconst tuya = NativeModules.TuyaHomeModule;\r\n\r\nexport type QueryRoomListParams = {\r\n  homeId?: number;\r\n};\r\nexport type QueryRoomListResponse = {\r\n  name: string;\r\n  displayOrder: number;\r\n  id: number;\r\n  roomId: number;\r\n}[];\r\n\r\nexport function queryRoomList(\r\n  params: QueryRoomListParams\r\n): Promise<QueryRoomListResponse | TuyaError> {\r\n  return tuya.queryRoomList(params);\r\n}\r\n\r\nexport type GetHomeDetailParams = {\r\n  homeId: number;\r\n};\r\nexport type DeviceDetailResponse = {\r\n  homeId: number;\r\n  isOnline: boolean;\r\n  cloudOnline: boolean;\r\n  productId: string;\r\n  devId: string;\r\n  verSw: string;\r\n  name: string;\r\n  dps: DeviceDps;\r\n  homeDisplayOrder: number;\r\n  roomId: number;\r\n  uuid: string;\r\n  communicationId: string;\r\n};\r\nexport type GetHomeDetailResponse = {\r\n  deviceList: DeviceDetailResponse[];\r\n  groupList: any[];\r\n  meshList: any[];\r\n  sharedDeviceList: any[];\r\n  sharedGroupList: any[];\r\n};\r\n\r\nexport function getHomeDetail(\r\n  params: GetHomeDetailParams\r\n): Promise<GetHomeDetailResponse | TuyaError> {\r\n  return tuya.getHomeDetail(params);\r\n}\r\n\r\nexport type UpdateHomeParams = {\r\n  homeId: number;\r\n  name: string;\r\n  geoName: string;\r\n  lon: number;\r\n  lat: number;\r\n};\r\n\r\nexport function updateHome(params: UpdateHomeParams): Promise<string | TuyaError> {\r\n  return tuya.updateHome(params);\r\n}\r\n\r\nexport type DismissHomeParams = {\r\n  homeId: number;\r\n};\r\n\r\nexport function dismissHome(params: DismissHomeParams): Promise<string | TuyaError> {\r\n  return tuya.dismissHome(params);\r\n}\r\n\r\nexport type SortRoomsParams = {\r\n  idList: number[];\r\n  homeId: number;\r\n};\r\n\r\nexport function sortRoom(params: SortRoomsParams): Promise<string | TuyaError> {\r\n  return tuya.sortRoom(params);\r\n}\r\n","import { TuyaError } from './generic';\r\nimport { NativeModules } from 'react-native';\r\n\r\nconst tuya = NativeModules.TuyaHomeDataManagerModule;\r\n\r\nexport type GetRoomDeviceListParams = {\r\n  homeId?: number;\r\n  roomId: number;\r\n};\r\n\r\nexport type GetRoomDeviceListResponse = {\r\n  deviceList: {}[];\r\n  groupList: {}[];\r\n};\r\n\r\nexport function getRoomDeviceList(\r\n  params: GetRoomDeviceListParams\r\n): Promise<GetRoomDeviceListResponse | TuyaError> {\r\n  return tuya.getRoomDeviceList(params);\r\n}\r\n","import { DeviceBean } from 'device';\r\nimport { TuyaError } from './generic';\r\nimport { NativeModules, Platform } from 'react-native';\r\n\r\nconst tuya = NativeModules.TuyaHomeManagerModule;\r\n\r\nexport type CreateHomeParams = {\r\n  name: string;\r\n  geoName: string;\r\n  lon: number;\r\n  lat: number;\r\n  rooms: string[];\r\n};\r\n\r\nexport type HomeDetailsResponse = {\r\n  name: string;\r\n  admin: boolean;\r\n  background: string;\r\n  dealStatus?: 1 | 2; // 1 = unaccepted 2 = accepted\r\n  deviceList: DeviceBean[];\r\n  displayOrder: number;\r\n  geoName: string;\r\n  gid: number;\r\n  homeId: number;\r\n  lat: number;\r\n  lon: number;\r\n};\r\n\r\nexport function createHome(params: CreateHomeParams): Promise<HomeDetailsResponse | TuyaError> {\r\n  return tuya.createHome(params);\r\n}\r\n\r\nexport type QueryHomeListResponse = HomeDetailsResponse[];\r\n\r\nexport async function queryHomeList(): Promise<QueryHomeListResponse | TuyaError> {\r\n  let homes = await tuya.queryHomeList();\r\n  // Tuya's Android SDK uses different property names than the iOS SDK...\r\n  if (Platform.OS === 'android') {\r\n    homes = homes.map((m: any) => ({\r\n      ...m,\r\n      dealStatus: m.homeStatus,\r\n    }));\r\n  }\r\n  return homes;\r\n}\r\n\r\nexport type JoinFamilyParams = {\r\n  homeId: number;\r\n  action: boolean;\r\n};\r\n\r\nexport function joinFamily(params: JoinFamilyParams) {\r\n  return tuya.joinFamily(params);\r\n}\r\n","import { TuyaError } from './generic';\r\nimport { NativeModules, Platform } from 'react-native';\r\n\r\nconst tuya = NativeModules.TuyaHomeMemberModule;\r\n\r\nexport type QueryMemberListParams = { homeId: number };\r\nexport type MemberListItem = {\r\n  admin: boolean;\r\n  username: string;\r\n  id: number;\r\n  dealStatus: number;\r\n};\r\nexport type QueryMemberListResponse = MemberListItem[];\r\n\r\nexport async function queryMemberList(\r\n  params: QueryMemberListParams\r\n): Promise<QueryMemberListResponse | TuyaError> {\r\n  let members = await tuya.queryMemberList(params);\r\n  // Tuya's Android SDK uses different property names than the iOS SDK...\r\n  if (Platform.OS === 'android') {\r\n    members = members.map((m: any) => ({\r\n      admin: m.admin,\r\n      username: m.account,\r\n      id: m.memberId,\r\n      dealStatus: m.memberStatus,\r\n    }));\r\n  }\r\n  return members;\r\n}\r\n\r\nexport type AddMemberParams = {\r\n  homeId: number;\r\n  userAccount: string; // email\r\n  countryCode: string;\r\n  name: string;\r\n  admin: boolean;\r\n};\r\n\r\nexport function addMember(params: AddMemberParams): Promise<any> {\r\n  return tuya.addMember(params);\r\n}\r\n\r\nexport type RemoveMemberParams = {\r\n  memberId: number;\r\n};\r\n\r\nexport function removeMember(params: RemoveMemberParams): Promise<any> {\r\n  return tuya.removeMember(params);\r\n}\r\n","import { NativeModules } from 'react-native';\r\nimport { addEvent, bridge, HARDWAREUPGRADELISTENER } from './bridgeUtils';\r\nimport { TuyaError } from './generic';\r\n\r\nconst tuya = NativeModules.TuyaDeviceModule;\r\n\r\nexport type StartOtaParams = {\r\n  devId: string;\r\n};\r\n\r\nexport function startOta(\r\n  params: StartOtaParams,\r\n  onSuccess: (data: any) => void,\r\n  onFailure: (data: any) => void,\r\n  onProgress: (data: any) => void\r\n) {\r\n  tuya.startOta(params);\r\n  return addEvent(bridge(HARDWAREUPGRADELISTENER, params.devId), data => {\r\n    if (data.type === 'onSuccess') {\r\n      onSuccess(data);\r\n    } else if (data.type === 'onFailure') {\r\n      onFailure(data);\r\n    } else if (data.type === 'onProgress') {\r\n      onProgress(data);\r\n    }\r\n  });\r\n}\r\n\r\nexport function getOtaInfo(params: StartOtaParams): Promise<any[] | TuyaError> {\r\n  return tuya.getOtaInfo(params);\r\n}\r\n","import { NativeModules } from 'react-native';\r\nimport { DeviceDps } from './device';\r\nimport { TuyaError } from './generic';\r\n\r\nconst tuya = NativeModules.TuyaTimerModule;\r\n\r\nexport type AddTimerWithTaskDpsParams = {\r\n  devId: number;\r\n  taskName: string;\r\n  loops: string; // Number of cycles \"0000000\", each 0: off, 1: on, from left to right: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday\r\n  time: string; // e.g. 14:29\r\n  dps: DeviceDps;\r\n};\r\n\r\nexport function addTimerWithTask(\r\n  params: AddTimerWithTaskDpsParams\r\n): Promise<any> {\r\n  return tuya.addTimerWithTask(params);\r\n}\r\n\r\nexport type UpdateTimerWithTaskParams = AddTimerWithTaskDpsParams & {\r\n  timerId: string;\r\n  isOpen: boolean;\r\n};\r\n\r\nexport function updateTimerWithTask(\r\n  params: UpdateTimerWithTaskParams\r\n): Promise<any> {\r\n  return tuya.updateTimerWithTask(params);\r\n}\r\n\r\nexport type GetTimerTaskStatusWithDeviceIdParams = {\r\n  devId: number;\r\n};\r\n\r\nexport function getTimerTaskStatusWithDeviceId(\r\n  params: GetTimerTaskStatusWithDeviceIdParams\r\n): Promise<any> {\r\n  return tuya.getTimerTaskStatusWithDeviceId(params);\r\n}\r\n\r\nexport type GetAllTimerWithDeviceIdParams = {\r\n  devId: number;\r\n};\r\n\r\nexport type TimerTask = {\r\n  timerList: {\r\n    timerId: string;\r\n    loops: string;\r\n    time: string;\r\n    status: number;\r\n  }[];\r\n  timerTaskStatus: { open: boolean; timerName: string };\r\n};\r\n\r\nexport type GetAllTimerWithDeviceIdResponse = TimerTask[];\r\n\r\nexport async function getAllTimerWithDeviceId(\r\n  params: GetAllTimerWithDeviceIdParams\r\n): Promise<GetAllTimerWithDeviceIdResponse | TuyaError> {\r\n  const timers = await tuya.getAllTimerWithDeviceId(params);\r\n  timers.forEach((t: any) => {\r\n    t.timerTaskStatus.open = !!t.timerTaskStatus.open;\r\n  });\r\n  return timers;\r\n}\r\n\r\nexport type RemoveTimerWithTaskParams = {\r\n  devId: number;\r\n  taskName: string;\r\n  timerId: string;\r\n};\r\n\r\nexport function removeTimerWithTask(\r\n  params: RemoveTimerWithTaskParams\r\n): Promise<any> {\r\n  return tuya.removeTimerWithTask(params);\r\n}\r\n\r\nexport type UpdateTimerStatusWithTaskParams = {\r\n  devId: number;\r\n  taskName: string;\r\n  timerId: string;\r\n  isOpen: boolean;\r\n};\r\n\r\nexport function updateTimerStatusWithTask(\r\n  params: UpdateTimerStatusWithTaskParams\r\n): Promise<any> {\r\n  return tuya.updateTimerStatusWithTask(params);\r\n}\r\n","import { TuyaError } from './generic';\r\nimport { NativeModules } from 'react-native';\r\n\r\nconst tuya = NativeModules.TuyaUserModule;\r\n\r\nexport type RegisterAccountWithEmailParams = {\r\n  countryCode: string;\r\n  email: string;\r\n  validateCode: string;\r\n  password: string;\r\n};\r\nexport function registerAccountWithEmail(\r\n  params: RegisterAccountWithEmailParams\r\n): Promise<any> {\r\n  return tuya.registerAccountWithEmail(params);\r\n}\r\n\r\nexport type GetEmailValidateCodeParams = {\r\n  countryCode: string;\r\n  email: string;\r\n};\r\nexport function getRegisterEmailValidateCode(\r\n  params: GetEmailValidateCodeParams\r\n): Promise<any> {\r\n  return tuya.getRegisterEmailValidateCode(params);\r\n}\r\n\r\n\r\nexport type LoginWithEmailParams = {\r\n  email: string;\r\n  password: string;\r\n  countryCode: string;\r\n};\r\nexport function loginWithEmail(params: LoginWithEmailParams): Promise<any> {\r\n  return tuya.loginWithEmail(params);\r\n}\r\n\r\nexport function getEmailValidateCode(\r\n  params: GetEmailValidateCodeParams\r\n): Promise<any> {\r\n  return tuya.getEmailValidateCode(params);\r\n}\r\n\r\nexport type ResetEmailPasswordParams = {\r\n  email: string;\r\n  countryCode: string;\r\n  validateCode: string;\r\n  newPassword: string;\r\n};\r\nexport function resetEmailPassword(\r\n  params: ResetEmailPasswordParams\r\n): Promise<any> {\r\n  return tuya.resetEmailPassword(params);\r\n}\r\n\r\nexport function logout(): Promise<string | TuyaError> {\r\n  return tuya.logout();\r\n}\r\n\r\nexport type User = {\r\n  email: string;\r\n  username: string;\r\n  sid: string;\r\n  timezoneId: string;\r\n  uid: string;\r\n  userType: number;\r\n  headPic: string;\r\n  mobile: string;\r\n  nickName: string;\r\n  phoneCode: string;\r\n};\r\n\r\nexport async function getCurrentUser(): Promise<User | null | TuyaError> {\r\n  const user = await tuya.getCurrentUser();\r\n  // The iOS SDK returns an empty user model but the Android one doesn't.\r\n  // Need to check for username over email, as guest accounts do not have an email.\r\n  return user && user.username ? user : null;\r\n}\r\n\r\nexport function cancelAccount(): Promise<string | TuyaError> {\r\n  return tuya.cancelAccount();\r\n}\r\n\r\nexport type GuestAccountLoginParams = {\r\n  countryCode: string;\r\n  nickname: string;\r\n};\r\n\r\nexport function loginWithGuest(params: GuestAccountLoginParams): Promise<any> {\r\n  return tuya.loginWithTouristUser(params);\r\n}\r\n"],"names":["tuya","NativeModules","TuyaActivatorModule","tuyaBLEActivator","TuyaBLEActivatorModule","tuyaBLEScanner","TuyaBLEScannerModule","openNetworkSettings","ActivatorType","initActivator","params","stopConfig","startBluetoothScan","Platform","OS","stopLePairing","console","error","initBluetoothDualModeActivator","getCurrentWifi","success","GROUPLISTENER","HARDWAREUPGRADELISTENER","DEVLISTENER","SUBDEVLISTENER","HOMESTATUS","HOMECHANGE","SINGLETRANSFER","eventEmitter","NativeEventEmitter","TuyaRNEventEmitter","addEvent","eventName","callback","addListener","bridge","key","id","TuyaDeviceModule","devListenerSubs","registerDevListener","type","sub","devId","data","unRegisterAllDevListeners","remove","unRegisterDevListener","getDevice","Promise","resolve","getDeviceData","send","removeDevice","renameDevice","getDataPointStat","TuyaHomeModule","queryRoomList","getHomeDetail","updateHome","dismissHome","sortRoom","TuyaHomeDataManagerModule","getRoomDeviceList","queryHomeList","then","homes","map","m","_extends","dealStatus","homeStatus","e","reject","TuyaHomeManagerModule","createHome","joinFamily","queryMemberList","members","admin","username","account","memberId","memberStatus","TuyaHomeMemberModule","addMember","removeMember","startOta","onSuccess","onFailure","onProgress","getOtaInfo","getAllTimerWithDeviceId","timers","forEach","t","timerTaskStatus","open","TuyaTimerModule","addTimerWithTask","updateTimerWithTask","getTimerTaskStatusWithDeviceId","removeTimerWithTask","updateTimerStatusWithTask","getCurrentUser","user","TuyaUserModule","registerAccountWithEmail","getRegisterEmailValidateCode","loginWithEmail","getEmailValidateCode","resetEmailPassword","logout","cancelAccount","loginWithGuest","loginWithTouristUser"],"mappings":"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"}